---
import type { Theme, HeroMedia, CTA, StorySection } from '$types/content';
import { isExternalLink } from '$lib/links';
import CTALink from './ctas/Link.svelte';
import CTATransparent from './ctas/Transparent.svelte';
import { buildSection } from '$lib/helpers/posts';

export interface Props {
  title: string;
  body: string;
  section: StorySection;
  theme: Theme;
  media: HeroMedia;
  cta: CTA;
  form?: 'banner' | 'standalone' | 'header';
}

const {
  title,
  body,
  section,
  theme = {},
  media = {},
  form = 'banner',
  cta = {},
} = Astro.props;

const Wrapper = form === 'header' ? 'header' : 'article';
const Header = form === 'header' ? 'h1' : 'h2';
const banner = form === 'banner';

const sectionMedia = buildSection(section);
const background = theme?.theme
  ? theme?.background || false
  : sectionMedia.background;
---

<Wrapper class="story-hero">
  <div class:list={['theme', `theme__${theme?.theme || section}`]}>
    <div class="story-hero--inner">
      <div class="story-hero--content-wrapper wrapper--padded wrapper--padding">
        {
          form === 'header' && cta.url && (
            <a href={cta.url} class="story-hero--top-cta">
              <CTALink arrow={!isExternalLink(cta.url) ? 'back' : 'external'}>
                {cta.text}
              </CTALink>
            </a>
          )
        }
        {
          (theme.eyebrow || section) && (
            <div
              class:list={[
                'story-hero--eyebrow',
                { 'story-hero--unibrow': !banner },
              ]}
            >
              {!banner && section && (
                <img
                  src={sectionMedia.icon}
                  alt=""
                  class="hero-hero__icon icon"
                  aria-hidden="true"
                  crossorigin="anonymous"
                  loading="lazy"
                  sizes="100vw"
                  height=""
                  width=""
                />
              )}
              <small
                class:list={[
                  { 'type--h2': banner },
                  { 'type--eyebrow': !banner },
                ]}
              >
                {theme.eyebrow || section}
              </small>
            </div>
          )
        }

        <Header class="type--h1">{title}</Header>
        <!-- Only include the description and lower CTA if this isn't being displayed as a header -->
        {
          form !== 'header' && (
            <>
              <p class="story-hero--body type--h4">{body}</p>
              <a href={cta.url} class="story-hero--cta">
                {form === 'banner' ? (
                  <CTATransparent>{cta.text}</CTATransparent>
                ) : (
                  form === 'standalone' && (
                    <CTALink
                      arrow={!isExternalLink(cta.url) ? 'forward' : 'external'}
                    >
                      {cta.text}
                    </CTALink>
                  )
                )}
              </a>
            </>
          )
        }
      </div>
      {
        media.url ? (
          <div class="story-hero--image-wrapper">
            <img src={media.url} alt={media.alt} class="story-hero--image" />
          </div>
        ) : (
          ''
        )
      }
      {
        background && (
          <div class="story-hero--background">
            <img loading="lazy" data-large aria-hidden src={background.large} />
            <img
              loading="lazy"
              data-small
              aria-hiddenn="true"
              src={background.small}
            />
          </div>
        )
      }
    </div>
  </div>
</Wrapper>

<style lang="scss">
  .story-hero {
    container-type: inline-size;
    position: relative;
    width: 100%;

    &--inner {
      display: flex;
      flex-direction: column;
      gap: 2rem;

      overflow: hidden;
      max-width: 100rem;
      margin: 0 auto;

      @container (min-width: 660px) {
        display: grid;
        align-items: center;
        grid-template-columns: minmax(40ch, 50%) minmax(200px, auto);
      }
    }

    &--eyebrow {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      margin-bottom: 1rem;
    }

    &--unibrow {
      margin-bottom: 0.5rem;
    }

    &--content-wrapper {
      display: flex;
      flex-direction: column;
      // padding-block-start: clamp(2rem, 6vw, 3rem);
      // padding-block-end: clamp(2rem, 6vw, 3rem);
    }

    &--body {
      margin-top: 1.25rem;
    }
    &--cta {
      --cta-color: var(--hero-theme-color);
      margin-top: 1.75rem;
      max-width: max-content;
    }

    &--top-cta {
      --cta-color: var(--hero-theme-color);
      align-self: flex-start;
      position: absolute;
      top: 2rem;
    }

    &--image-wrapper {
      display: flex;
      align-items: center;
      justify-content: flex-end;
      position: relative;
      aspect-ratio: 4 / 3;
      min-height: 15rem;
      max-height: 30cqh;
      justify-self: flex-end;
      z-index: 1;

      @container (min-width: 660px) {
        min-height: 20rem;
        max-height: 50cqh;
      }
    }

    &--background {
      position: absolute;
      right: 0;
      z-index: 0;
      height: 100%;
      width: 100%;

      img {
        display: none;
        position: absolute;
        right: 0;

        @container (min-width: 660px) {
          max-width: 60cqw;
        }
      }

      [data-small] {
        display: block;
        bottom: 0;

        @container (min-width: 660px) {
          display: none;
          bottom: unset;
        }
      }

      [data-large] {
        top: 0;
        height: 100%;
        @container (min-width: 660px) {
          display: block;
        }
      }
    }
  }

  /** Hero Themes */
  .theme {
    background-color: var(--hero-theme-background);
    border-radius: 0.625rem;

    @container (min-width: calc(100vw - 1rem)) {
      border-radius: 0;
    }

    [class*='type'],
    [class*='link'],
    [class*='icon'] {
      color: var(--hero-theme-color);
      fill: var(--hero-theme-color);
    }

    .cta:focus {
      background-color: var(--hero-theme-cta-background);
    }

    &__games {
      --hero-theme-background: var(--pink-25);
    }

    &__web {
      --hero-theme-background: var(--blue-30);
    }

    &__foundations {
      --hero-theme-background: var(--yellow-75);
    }

    &__android {
      --hero-theme-background: var(--green-25);
    }

    &__event {
      --hero-theme-background: var(--yellow-80);
    }

    &__announcement {
      --hero-theme-background: var(--red-25);
    }

    &__leader-s-corner {
      --hero-theme-background: var(--purple-50);
    }

    &__m100 {
      --hero-theme-color: var(--white);
      --hero-theme-background: var(--blue-850);
      --hero-theme-cta-background: transparent;
    }

    &__io-2022 {
      --hero-theme-color: var(--white);
      --hero-theme-background: var(--green-700);
      --hero-theme-cta-background: transparent;
    }

    &__lumafusion {
      --hero-theme-color: var(--white);
      --hero-theme-background: var(--blue-850);
      --hero-theme-cta-background: transparent;

      --center: 97%;
      --offset: 74px;
      --small: 25%;
      --large: calc(25% + 5rem);

      background-image: radial-gradient(
          circle farthest-corner at var(--center) var(--center),
          var(--blue-200) var(--small),
          transparent var(--small)
        ),
        radial-gradient(
          circle farthest-corner at calc(var(--center) + var(--offset))
            calc(var(--center) + var(--offset)),
          var(--blue-300) var(--large),
          transparent var(--large)
        );
    }
  }
</style>
