---
import Doc from '$layouts/doc.astro';
import TOC from '$components/TOC.svelte';
import SectionNav from '$components/SectionNav.svelte';
import { renderMarkdown } from '$$markdown';
import { buildSectionsFromGlob, metaFromFile } from '$$data';

/**
 * Builds paths for content files
 */
export async function getStaticPaths() {
  const articles = await Astro.glob('../../markdown/**/*.md');
  const sections = buildSectionsFromGlob(articles);

  const all = await Promise.all(
    articles.map(async (article) => {
      const { slug, section, lang } = metaFromFile(article.file);
      const { content, toc } = await renderMarkdown(article.rawContent());

      article.frontmatter.date = new Date(article.frontmatter.date);
      return {
        params: {
          lang,
          path: slug,
        },
        props: {
          content,
          toc,
          meta: article.frontmatter,
          section,
          subnav: sections[lang][section],
        },
      };
    }),
  );
  return all.filter(
    (article) =>
      article.props.section !== 'posts' && article.props.section !== 'stories',
  );
}

const { lang } = Astro.params;
const { content, meta, section, toc, subnav } = Astro.props;

const locale = {
  code: lang,
  dir: 'ltr',
};
---

<Doc
  title={meta.title}
  locale={locale}
  metadesc={meta.metadesc}
  section={section}
>
  <!-- Subnav Sidebar -->
  <Fragment slot="subnav">
    <SectionNav
      links={subnav}
      title={section}
      active={Astro.url.pathname}
      client:load
    />
  </Fragment>
  <!-- Main content area -->
  <Fragment slot="content" set:html={content} />
  <!-- Extras sidegar -->
  <Fragment slot="extras">
    {toc.length > 0 && <TOC toc={toc} client:load />}
  </Fragment>
</Doc>
