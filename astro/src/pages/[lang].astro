---
import { getMicrocopy, getLanguages } from '$$microcopy';
import Wrapper from '$layouts/wrapper.astro';
import AnimatedHero from '$components/home/animated-hero.svelte';

/**
 * Builds paths for content files
 * @return {object[]} Paths
 */
export function getStaticPaths() {
  const languages = getLanguages();
  return languages.map((l) => ({
    params: {
      lang: l.code,
    },
    props: {
      microcopy: getMicrocopy(l.code),
    },
  }));
}

const { microcopy } = Astro.props;
const { home, locale } = microcopy;
const hero = { heading: home.hero.heading, copy: home.hero.copy };
---

<Wrapper locale={locale} metadesc="" title="ChromeOS.dev">
  <AnimatedHero hero={hero} client:idle />

  <script>
    import { theme } from '$js/theme';
    import { animationPlaceholders } from '$js/constants';

    theme.subscribe((t) => {
      const animation = document.querySelector('.animated-hero--animation');

      if (animation) {
        const img = animation.querySelector('.animated-hero--fallback');

        if (img) {
          img.src = animationPlaceholders[t];
        }
      }
    });
  </script>
</Wrapper>
